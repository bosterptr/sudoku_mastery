# syntax=docker/dockerfile:1
ARG RUST_VERSION=1.76.0
ARG APP_NAME=sudoku_service
# xx is a helper for cross-compilation.
# See https://github.com/tonistiigi/xx/ for more information.
FROM --platform=$BUILDPLATFORM tonistiigi/xx:1.4.0 AS xx
FROM --platform=$BUILDPLATFORM rust:${RUST_VERSION}-alpine AS build
ARG APP_NAME
WORKDIR /app
ENV SQLX_OFFLINE=true
COPY --from=xx / /.
RUN apk add --no-cache clang lld musl-dev git file openssl openssl-dev librdkafka-dev pkgconfig bash python3 py3-pip libc-dev zlib-dev build-base protobuf-dev protobuf g++ 
ARG TARGETPLATFORM
# Install cross compilation build dependencies.
RUN apk add --no-cache musl-dev gcc
RUN --mount=type=bind,source=src,target=src \
    --mount=type=bind,source=Cargo.toml,target=Cargo.toml \
    --mount=type=bind,source=build.rs,target=build.rs \
    --mount=type=bind,source=migrations,target=migrations \
    --mount=type=bind,source=Cargo.lock,target=Cargo.lock \
    --mount=type=bind,source=sqlx-data.json,target=sqlx-data.json \
    --mount=type=cache,target=/app/target/,id=rust-cache-${APP_NAME}-${TARGETPLATFORM} \
    --mount=type=cache,target=/usr/local/cargo/git/db \
    --mount=type=cache,target=/usr/local/cargo/registry/ \
xx-cargo build --locked --release --target-dir ./target && \
cp ./target/$(xx-cargo --print-target-triple)/release/$APP_NAME /bin/server && \
xx-verify /bin/server

FROM alpine:3.18 AS final
RUN apk add --no-cache openssl-dev librdkafka-dev pkgconfig
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    appuser
USER appuser
COPY --from=build /bin/server /bin/
EXPOSE 5000
CMD ["/bin/server"]
