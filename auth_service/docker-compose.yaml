version: '3.4'
services:
  postgres:
    image: 'bitnami/postgresql:latest'
    ports:
      - '5432:5432'
    environment:
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_DATABASE=user
    volumes:
      - ./persistence/pgdata:/var/lib/postgresql/data
  redis:
    image: 'bitnami/redis:latest'
    ports:
      - '6379:6379'
    environment:
      - REDIS_PASSWORD=password123
  zoo1:
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zoo1
    ports:
      - '2181:2181'
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./persistence/zoo1/data:/data
      - ./persistence/zoo1/datalog:/datalog
  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zoo1:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./persistence/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
  # schema-registry:
  #   image: confluentinc/cp-schema-registry:6.1.1
  #   hostname: schema-registry
  #   depends_on:
  #     - kafka1
  #   ports:
  #     - '8081:8081'
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka1:19092'
  #     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
  # kafka-rest-proxy:
  #   image: confluentinc/cp-kafka-rest:5.5.1
  #   hostname: kafka-rest-proxy
  #   ports:
  #     - "8082:8082"
  #   environment:
  #     # KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181
  #     KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
  #     KAFKA_REST_HOST_NAME: kafka-rest-proxy
  #     KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:19092
  #   depends_on:
  #     - zoo1
  #     - kafka1
  # kafka-topics-ui:
  #   image: landoop/kafka-topics-ui:0.9.4
  #   hostname: kafka-topics-ui
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
  #     PROXY: "true"
  #   depends_on:
  #     - zoo1
  #     - kafka1
  #     - kafka-rest-proxy
  # auth:
  #   build:
  #     context: ./
  #     target: production
  #   command: node --inspect-brk=0.0.0.0 dist/index.js
  #   ports:
  #     - "80:80"
  #     - "9229:9229"
  #   links:
  #     - postgres
  #     - redis
  #     - kafka1
  #   volumes:
  #     - .:/work/
  #   depends_on:
  #     - postgres
  #     - redis
  #     - kafka1
  #   environment:
  #     - TYPEORM_CONNECTION=postgres
  #     - TYPEORM_HOST=postgres
  #     - TYPEORM_USERNAME=postgres
  #     - TYPEORM_PASSWORD=postgres
  #     - TYPEORM_DATABASE=development
  #     - TYPEORM_PORT=5432
  #     - TYPEORM_LOGGING=
  #     - TYPEORM_ENTITIES=src/db/entity/**/*.ts
  #     - TYPEORM_MIGRATIONS=src/db/migration/**/*.ts
  #     - TYPEORM_SUBSCRIBERS=src/db/subscriber/**/*.ts
  #     - TYPEORM_ENTITIES_DIR=src/db/entity
  #     - TYPEORM_MIGRATIONS_DIR=src/db/migration
  #     - TYPEORM_SUBSCRIBERS_DIR=src/db/subscriber
  #     - KAFKA1=kafka1:19092
  #     - NODE_ENV=production
  #     - REDIS_HOST=redis
  #     - REDIS_PASSWORD=password123
  #     - REDIS_DB_NUMBER=0
